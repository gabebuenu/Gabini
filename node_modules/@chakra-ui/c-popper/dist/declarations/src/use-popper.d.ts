import { Placement } from "@popperjs/core/lib/enums";
import { Instance, Modifier, VirtualElement, State } from "@popperjs/core/lib/popper-lite";
import { Ref } from "vue";
import { CreatePopperOptions } from "./create-popper";
export type { Placement };
export interface UsePopperOptions extends CreatePopperOptions {
    strategy?: "absolute" | "fixed";
    placement?: Placement;
    modifiers?: Array<Modifier<any, any>>;
}
export declare function usePopper(props?: UsePopperOptions): UsePopperReturn;
export interface UsePopperReturn {
    update: (() => Promise<Partial<State>>) | undefined;
    forceUpdate: (() => void) | undefined;
    reference: (el: any) => void;
    popper: (el: any) => void;
    referenceEl: Ref<Element | VirtualElement | null>;
    popperEl: Ref<Instance | null>;
}
//# sourceMappingURL=use-popper.d.ts.map