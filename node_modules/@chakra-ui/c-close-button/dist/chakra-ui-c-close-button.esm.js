import { defineComponent, createVNode, mergeProps, computed } from 'vue';
import { useStyleConfig, chakra } from '@chakra-ui/vue-system';
import { filterUndefined } from '@chakra-ui/utils';
import { getValidChildren } from '@chakra-ui/vue-utils';
import { CIcon } from '@chakra-ui/c-icon';

function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };
  return _extends.apply(this, arguments);
}

var CCloseIcon = defineComponent({
  setup: function setup(_, _ref) {
    var attrs = _ref.attrs;
    return function () {
      return createVNode(CIcon, mergeProps({
        "focusable": "false",
        "aria-hidden": "true",
        "name": "close"
      }, attrs), {
        "default": function _default() {
          return [createVNode("path", {
            "fill": "currentColor",
            "d": "M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z"
          }, null)];
        }
      });
    };
  }
});
var CCloseButton = defineComponent({
  props: {
    as: {
      type: [Object, String],
      "default": "button"
    },
    isDisabled: {
      type: [Boolean],
      "default": false
    },
    size: [String],
    styleConfig: [String]
  },
  setup: function setup(props, _ref2) {
    var slots = _ref2.slots,
        attrs = _ref2.attrs;
    return function () {
      var themingProps = computed(function () {
        return filterUndefined({
          size: props.size,
          styleConfig: props.styleConfig
        });
      });
      var baseStyles = {
        outline: 0,
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        flexShrink: 0
      };
      var styles = useStyleConfig("CloseButton", themingProps);
      return createVNode(chakra.button, mergeProps({
        "as": props.as,
        "type": "button",
        "disabled": props.isDisabled,
        "aria-label": "Close",
        "__label": "icon-button",
        "__css": _extends({}, baseStyles, styles.value)
      }, attrs), {
        "default": function _default() {
          return slots["default"] ? getValidChildren(slots) : createVNode(CCloseIcon, null, null);
        }
      });
    };
  }
});

export { CCloseButton };
