/**
 * Hey! Welcome to @chakra-ui/vue-next CImage
 *
 * Image
 *
 * @see Docs     https://next.vue.chakra-ui.com/c-image
 * @see Source   https://github.com/chakra-ui/chakra-ui-vue-next/blob/master/packages/c-image/src/c-image/c-image.ts
 * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.2
 */
import { ComponentWithProps, DeepPartial, HTMLChakraProps, SystemProps } from "@chakra-ui/vue-system";
import { FallbackStrategy, UseImageProps } from "./use-image";
import { NativeImageOptions } from "./c-native-image";
interface ImageOptions extends NativeImageOptions {
    /**
     * Fallback image `src` to show if image is loading or image fails.
     *
     * Note ðŸš¨: We recommend you use a local image
     */
    fallbackSrc?: string;
    /**
     * Defines loading strategy
     */
    loading?: "eager" | "lazy";
    /**
     * How the image to fit within its bounds.
     * It maps to css `object-fit` property.
     * @type SystemProps["objectFit"]
     */
    fit?: SystemProps["objectFit"];
    /**
     * How to align the image within its bounds.
     * It maps to css `object-position` property.
     * @type SystemProps["objectPosition"]
     */
    align?: SystemProps["objectPosition"];
    /**
     * - beforeLoadOrError(default): loads the fallbackImage while loading the src
     * - onError: loads the fallbackImage only if there is an error fetching the src
     *
     * @default "beforeLoadOrError"
     */
    fallbackStrategy?: FallbackStrategy;
    /**
     * Defining which referrer is sent when fetching the resource.
     */
    referrerPolicy?: ReferrerPolicy;
}
export interface CImageProps extends UseImageProps, Omit<HTMLChakraProps<"img">, keyof UseImageProps>, ImageOptions {
}
export declare const CImage: ComponentWithProps<DeepPartial<CImageProps>>;
export {};
//# sourceMappingURL=c-image.d.ts.map