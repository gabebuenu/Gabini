import { defineComponent, computed, createVNode, mergeProps } from 'vue';
import { useStyleConfig, chakra } from '@chakra-ui/vue-system';
import { CBox } from '@chakra-ui/vue-next';
import { getValidChildren } from '@chakra-ui/vue-utils';

function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };
  return _extends.apply(this, arguments);
}

var FALLBACK_ID = "chakra-skip-nav";
var CSkipNavLink = defineComponent({
  name: "CSkipNavLink",
  props: {
    id: {
      type: String,
      "default": FALLBACK_ID
    }
  },
  setup: function setup(props, _ref) {
    var slots = _ref.slots,
        attrs = _ref.attrs;
    var styles = useStyleConfig("SkipLink", props);
    var skipLinkStyles = computed(function () {
      return _extends({
        userSelect: "none",
        border: "0",
        borderRadius: "md",
        fontWeight: "semibold",
        height: "1px",
        width: "1px",
        margin: "-1px",
        padding: "0",
        outline: "0",
        overflow: "hidden",
        position: "absolute",
        clip: "rect(0 0 0 0)"
      }, styles.value, {
        _focus: {
          clip: "auto",
          width: "auto",
          height: "auto",
          boxShadow: "outline",
          padding: "1rem",
          position: "fixed",
          top: "1.5rem",
          insetStart: "1.5rem"
        }
      });
    });
    return function () {
      return createVNode(chakra.a, mergeProps({
        "href": "#" + props.id,
        "__css": skipLinkStyles.value
      }, attrs), {
        "default": function _default() {
          return getValidChildren(slots);
        }
      });
    };
  }
});
var CSkipNavContent = defineComponent({
  name: "CSkipNavContent",
  props: {
    id: {
      type: String,
      "default": FALLBACK_ID
    }
  },
  setup: function setup(props, _ref2) {
    var attrs = _ref2.attrs,
        slots = _ref2.slots;
    return function () {
      return createVNode(CBox, mergeProps({
        "tabIndex": "-1",
        "id": props.id,
        "data-testid": FALLBACK_ID
      }, attrs), {
        "default": function _default() {
          return getValidChildren(slots);
        }
      });
    };
  }
});

export { CSkipNavContent, CSkipNavLink };
