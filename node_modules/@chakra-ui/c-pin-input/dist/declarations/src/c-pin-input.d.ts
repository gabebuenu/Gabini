/**
 * Hey! Welcome to @chakra-ui/vue-next CPinInput
 *
 * The pin input component is similar to the input component but is optimized for entering sequences of digits quickly
 *
 * @see Docs     https://next.vue.chakra-ui.com/c-pin-input
 * @see Source   https://github.com/chakra-ui/chakra-ui-vue-next/blob/master/packages/c-pin-input/src/c-pin-input/c-pin-input.tsx
 * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.2
 */
declare const PinInputProvider: any, usePinInput: any;
export { PinInputProvider, usePinInput };
export declare const CPinInputProps: any;
export declare const CPinInput: import("vue").DefineComponent<any, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("change" | "invalid" | "complete" | "update:modelValue")[], "change" | "invalid" | "complete" | "update:modelValue", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<any> & {
    onChange?: ((...args: any[]) => any) | undefined;
    onInvalid?: ((...args: any[]) => any) | undefined;
    onComplete?: ((...args: any[]) => any) | undefined;
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
}, {} | {
    [x: string]: any;
}>;
export declare const CPinInputField: import("vue").DefineComponent<{
    index: {
        type: NumberConstructor;
        default: number;
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    index: {
        type: NumberConstructor;
        default: number;
    };
}>>, {
    index: number;
}>;
export declare const CPinInputClearButton: import("vue").DefineComponent<{}, () => JSX.Element, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, import("vue").EmitsOptions, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{}>>, {}>;
//# sourceMappingURL=c-pin-input.d.ts.map