/**
 * Hey! Welcome to @chakra-ui/vue-next Checkbox
 *
 * C checkbox component is used in forms when a user needs to select multiple values from several options
 *
 * @see Docs     https://next.vue.chakra-ui.com/c-checkbox
 * @see Source   https://github.com/chakra-ui/chakra-ui-vue-next/blob/master/packages/c-checkbox/src/c-checkbox/c-checkbox.tsx
 * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.2
 */
import { ThemingProps } from "@chakra-ui/vue-system";
import { ComponentWithProps, HTMLChakraProps, SystemProps } from "@chakra-ui/vue-system";
export interface CCheckboxControlProps {
    isIndeterminate?: boolean;
    /**
     * If `true`, the checkbox will be disabled
     */
    isDisabled?: boolean;
    /**
     * If `true` and `disabled` is passed, the checkbox will
     * remain tabbable but not interactive
     */
    isFocusable?: boolean;
    /**
     * If `true`, the checkbox will be readonly
     */
    isReadonly?: boolean;
    /**
     * If `true`, the checkbox is marked as invalid.
     */
    isInvalid?: boolean;
    /**
     * If `true`, the checkbox input is marked as required,
     */
    isRequired?: boolean;
    /**
     * The name of the input field in a checkbox
     * (Useful for form submission).
     */
    name?: string;
    /**
     * The value to be used in the checkbox input.
     * This is the value that will be returned on form submission.
     */
    value?: string | number;
    /**
     * Defines the string that labels the checkbox element.
     */
    "aria-label"?: string;
    "aria-labelledby"?: string;
    "aria-invalid"?: boolean;
    "aria-describedby"?: string;
    tabIndex?: number;
}
export interface CCheckboxProps extends HTMLChakraProps<"input">, ThemingProps<"Checkbox">, CCheckboxControlProps {
    /**
     * The spacing between the checkbox and its label text
     * @default 0.5rem
     * @type SystemProps["marginLeft"]
     */
    spacing?: SystemProps["marginLeft"];
    /**
     * The color of the checkbox icon when checked or indeterminate
     */
    iconColor?: string;
    /**
     * The size of the checkbox icon when checked or indeterminate
     */
    iconSize?: string | number;
    /**
     * The checked icon to use
     */
    icon?: any;
    /**
     * Additional props to be forwarded to the `input` element
     */
    inputProps?: HTMLChakraProps<"input">;
}
export declare const CCheckbox: ComponentWithProps<CCheckboxProps>;
//# sourceMappingURL=checkbox.d.ts.map