import { Ref, ComputedRef } from "vue";
export declare function useFocusTrap(containers: Ref<Set<HTMLElement>> | ComputedRef<Set<HTMLElement>>, enabled?: Ref<boolean> | ComputedRef<boolean>, options?: Ref<{
    initialFocus?: HTMLElement | null;
}> | ComputedRef<{
    initialFocus?: HTMLElement | null;
}>): void;
export declare function useReturnFocusSelector(shouldTrack: Ref<boolean>): {
    lastFocused: Ref<{
        addEventListener: (type: string, callback: EventListenerOrEventListenerObject | null, options?: boolean | AddEventListenerOptions | undefined) => void;
        dispatchEvent: (event: Event) => boolean;
        removeEventListener: (type: string, callback: EventListenerOrEventListenerObject | null, options?: boolean | EventListenerOptions | undefined) => void;
    } | null>;
    lastFocusedSelector: Ref<string | undefined>;
};
//# sourceMappingURL=use-focus-trap.d.ts.map