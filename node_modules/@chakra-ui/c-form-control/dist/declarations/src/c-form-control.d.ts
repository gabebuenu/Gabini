/**
 * Hey! Welcome to @chakra-ui/vue-next CFormControl
 *
 * Form control component is used to manage form controls such input fields checkbox and radio buttons it provides components and context that make your form fields accessible by default
 *
 * @see Docs     https://next.vue.chakra-ui.com/c-form-control
 * @see Source   https://github.com/chakra-ui/chakra-ui-vue-next/blob/master/packages/c-form-control/src/c-form-control/c-form-control.ts
 * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.2
 */
import { PropType } from "vue";
import { ComponentWithProps, DeepPartial, HTMLChakraProps } from "@chakra-ui/vue-system";
import { CFormControlProps } from "./use-form-control";
/**
 * `CFormControl` provides context such as
 * `isInvalid`, `isDisabled`, and `isRequired` to form elements.
 *
 * This is commonly used in form elements such as `input`,
 * `select`, `textarea`, etc.
 */
export declare const formControlProps: {
    isRequired: PropType<boolean | undefined>;
    isDisabled: PropType<boolean | undefined>;
    isInvalid: PropType<boolean | undefined>;
    isReadOnly: PropType<boolean | undefined>;
    label: PropType<string | undefined>;
    id: PropType<string | undefined>;
};
export declare const CFormControl: ComponentWithProps<DeepPartial<CFormControlProps>>;
export interface CHelpTextProps extends HTMLChakraProps<"div"> {
}
/**
 * CFormHelperText
 *
 * Assistive component that conveys additional guidance
 * about the field, such as how it will be used and what
 * types in values should be provided.
 */
export declare const CFormHelperText: ComponentWithProps<DeepPartial<CHelpTextProps>>;
//# sourceMappingURL=c-form-control.d.ts.map