import { ComponentWithProps, DeepPartial, HTMLChakraProps, ThemingProps } from "@chakra-ui/vue-system";
export interface FormLabelProps extends HTMLChakraProps<"label">, ThemingProps<"FormLabel"> {
}
export declare const CFormLabel: import("vue").DefineComponent<{
    colorScheme: import("vue").PropType<(string & {}) | "blue" | "cyan" | "gray" | "green" | "orange" | "pink" | "purple" | "red" | "teal" | "yellow" | "whiteAlpha" | "blackAlpha" | "linkedin" | "facebook" | "messenger" | "whatsapp" | "twitter" | "telegram" | undefined>;
    variant: import("vue").PropType<any>;
    size: import("vue").PropType<any>;
    styleConfig: import("vue").PropType<Record<string, any> | undefined>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    colorScheme: import("vue").PropType<(string & {}) | "blue" | "cyan" | "gray" | "green" | "orange" | "pink" | "purple" | "red" | "teal" | "yellow" | "whiteAlpha" | "blackAlpha" | "linkedin" | "facebook" | "messenger" | "whatsapp" | "twitter" | "telegram" | undefined>;
    variant: import("vue").PropType<any>;
    size: import("vue").PropType<any>;
    styleConfig: import("vue").PropType<Record<string, any> | undefined>;
}>>, {}>;
export interface CRequiredIndicatorProps extends HTMLChakraProps<"span"> {
}
/**
 * Used to show a "required" text or an asterisks (*) to indicate that
 * a field is required.
 */
export declare const CRequiredIndicator: ComponentWithProps<DeepPartial<CRequiredIndicatorProps>>;
//# sourceMappingURL=c-form-label.d.ts.map