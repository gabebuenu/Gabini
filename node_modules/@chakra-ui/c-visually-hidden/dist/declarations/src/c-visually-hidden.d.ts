import { CSSObject } from "@emotion/css";
/**
 * Styles to visually hide an element
 * but make it accessible to screen-readers
 */
export declare const visuallyHiddenStyle: CSSObject;
/**
 * Visually hidden component used to hide
 * elements on screen
 */
export declare const CVisuallyHidden: import("vue").DefineComponent<import("@chakra-ui/vue-system").ChakraFactoryProps, {}, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<import("@chakra-ui/vue-system").ChakraFactoryProps>>, {
    [x: string]: any;
}> | import("@chakra-ui/vue-system").ComponentWithProps<import("@chakra-ui/vue-system").ChakraFactoryProps>;
/**
 * Visually hidden input component for designing
 * custom input components using the html `input`
 * as a proxy
 */
export declare const CVisuallyHiddenInput: import("vue").DefineComponent<import("@chakra-ui/vue-system").ChakraFactoryProps, {}, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<import("@chakra-ui/vue-system").ChakraFactoryProps>>, {
    [x: string]: any;
}> | import("@chakra-ui/vue-system").ComponentWithProps<import("@chakra-ui/vue-system").ChakraFactoryProps>;
export default CVisuallyHidden;
//# sourceMappingURL=c-visually-hidden.d.ts.map